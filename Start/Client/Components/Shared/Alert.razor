<div class="toast @this.AlertTypeToClass(this.Type)" role="alert">
    @this.AlertTypeToTitle(this.Type)
    @ChildContent
</div>

@code {
    [Parameter]
    public AlertType Type { get; set; }
    [Parameter]
    public RenderFragment ChildContent { get; set; } = null!;

    private string AlertTypeToClass(AlertType type)
    {
        switch (type)
        {
            case AlertType.Error: return "toast-error";
            case AlertType.Warning: return "toast-warning";
            case AlertType.Success: return "toast-success";
            case AlertType.Info: return "toast-primary";
            default: return "";
        }
    }

    private RenderFragment? AlertTypeToTitle(AlertType type)
    {
        switch (type)
        {
            case AlertType.Error:
                return @<b>Error</b>;
            case AlertType.Warning:
                return @<b>Warning</b>;
            case AlertType.Success:
                return @<b>Success</b>;
            case AlertType.Info:
                return @<b>Info</b>;
            default:
                return null;
        }
    }

    public enum AlertType
    {
        Error,
        Warning,
        Success,
        Info,
        None
    }
}
